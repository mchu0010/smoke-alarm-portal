extends layout

block content
  #container.container-fluid
    #language
      a(onclick='setLocale("EN")') English
      | &nbsp;|&nbsp;
      a(onclick='setLocale("ES")') Español
    #top
      #logo.text-center
        img.logo(src='./smokeAlarmPortal_files/redcross-logo-white-letters.png', alt='American Red Cross')
      #safety-message.row.text-center(role='complementary')
        p.col-xs-12.bigger-centered
          | #{__('Smoke alarms save lives.  Installing a smoke alarm is the first step to keeping your family safe.')}
    #error-box
      #error-message
    #main.row(role='main')
      #left.col-md-3
        p
          | #{__('Thank you for your interest in having FREE smoke alarms installed in your home.')} #{__('To request a FREE installation, please complete all fields in the form below and click “Submit.”')}
        p
          | #{__('After submitting your request, you will be contacted by an American Red Cross representative with information on installation availability in your area.')}
      #center.col-md-6
        .container-fluid(role='form')
          form(action="/", method="POST", class="form-horizontal")
            fieldset
              .row
                // Text input
                .form-group
                  .col-xs-12
                    label.screenreader(for='name') #{__('Your Name')}
                    input#name.form-control.input-md(name='name', type='text', placeholder='#{__("Your Name")}', class='validate[required]', data-prompt-position='topLeft:0,5')
              .row
                  // Text input
                  .form-group
                    .col-xs-12
                      label.screenreader(for='street_address') #{__('Street Address \& Unit (e.g., 123 Main St., Unit Q)')}
                      input#street_address.form-control.input-md(name='street_address', type='text', placeholder='#{__("Address \& Unit")}', class='validate[required]', data-prompt-position='topLeft:50,5')
              .row
                  // Text input
                  .form-group
                    .col-xs-5
                      label.screenreader(for='city') #{__('City')}
                      input#city.form-control.input-md(name='city', type='text', placeholder='#{__("City")}' class='validate[required]', data-prompt-position='topLeft:0,5')
                    .col-xs-3
                      label.screenreader(for='state') #{__('State')}
                      select#state.form-control(name='state', class='validate[required]', data-prompt-position='topRight:-40,5')
                        option(value='' disabled selected) #{__("State")}
                        option(value='Alabama') AL
                        option(value='Alaska') AK
                        option(value='Arizona') AZ
                        option(value='Arkansas') AR
                        option(value='California') CA
                        option(value='Colorado') CO
                        option(value='Connecticut') CT
                        option(value='Delaware') DE
                        option(value='District of Columbia') DC
                        option(value='Florida') FL
                        option(value='Georgia') GA
                        option(value='Hawaii') HI
                        option(value='Idaho') ID
                        option(value='Illinois') IL
                        option(value='Indiana') IN
                        option(value='Iowa') IA
                        option(value='Kansas') KS
                        option(value='Kentucky') KY
                        option(value='Louisiana') LA
                        option(value='Maine') ME
                        option(value='Maryland') MD
                        option(value='Massachusetts') MA
                        option(value='Michigan') MI
                        option(value='Minnesota') MN
                        option(value='Mississippi') MS
                        option(value='Missouri') MO
                        option(value='Montana') MT
                        option(value='Nebraska') NE
                        option(value='Nevada') NV
                        option(value='New Hampshire') NH
                        option(value='New Jersey') NJ
                        option(value='New Mexico') NM
                        option(value='New York') NY
                        option(value='North Carolina') NC
                        option(value='North Dakota') ND
                        option(value='Ohio') OH
                        option(value='Oklahoma') OK
                        option(value='Oregon') OR
                        option(value='Pennsylvania') PA
                        option(value='Rhode Island') RI
                        option(value='South Carolina') SC
                        option(value='South Dakota') SD
                        option(value='Tennessee') TN
                        option(value='Texas') TX
                        option(value='Utah') UT
                        option(value='Vermont') VT
                        option(value='Virginia') VA
                        option(value='Washington') WA
                        option(value='West Virginia') WV
                        option(value='Wisconsin') WI
                        option(value='Wyoming') WY
                    .col-xs-4
                      label.screenreader(for='zip') #{__('Zip Code')}
                      input#zip.form-control.input-md(name='zip', type='text', placeholder='#{__("Zip Code")}', class='validate[required, custom[zip]]', data-prompt-position='topRight:-40,5')
              .row
                  .form-group
                    .col-xs-5
                      label.screenreader(for='phone') #{__('Phone Number')}
                      input#phone.form-control.input-md(name='phone', type='text', placeholder='#{__("Phone #")}', class='validate[groupRequired[contactPreference], custom[phone-10-digit-US]]', data-prompt-position='topRight:0,5')
                    .col-xs-7
                      label.screenreader(for='email') #{__('Email Address')}
                      input#email.form-control.input-md(name='email', type='text', placeholder='#{__("Email")}', class='validate[groupRequired[contactPreference], custom[email]]', data-prompt-position='topRight:0,5')
              .row
                // http://www.sitepoint.com/understanding-bootstrap-grid-system/ helped
                .form-group
                  .col-xs-12.text-center
                    input(type='hidden', name='_csrf', value='#{csrf}')
                    button#singlebutton.btn.btn-primary(name='singlebutton') #{__("Submit")}
      #right.col-md-3
        p
          | #{__('The American Red Cross and its partners have launched the Home Fire Campaign to reduce deaths and injuries caused by home fires by 25 percent over five years.')} #{__('The Red Cross asks every household in America to take two simple steps to help save lives: check or install smoke alarms and practice fire drills at home.')}
    #bottom.row
      p.availability.col-xs-12
        | #{__('This form can accept requests from the following States and Counties: IA (except Harrison, Mills and Pottawattamie Counties), ID, IL, MN, MO, MT, ND, SD, WA (except Clark, Cowlitz, Klickitat, Pacific, Skamania and Wahkiakum Counties), WI and Atchison, Doniphan, Johnson, Leavenworth and Wyandotte Counties in KS, Dakota County, NE and Malheur County, OR.')}
        span.notabene #{__('  If your location is not listed, please call 800-RED-CROSS to be connected to ')}
        span.notaoptime #{__('your')}
        span.notabene #{__(' local Red Cross Chapter.')}
      p.availability.col-xs-12
        | #{__('For more information about the importance of smoke alarms, see ')}
        a(class="contrast-link" href="http://labs.enigma.io/smoke-signals/" target="_blank") #{__('the Smoke Signals project')}
        |.
      p.availability.col-xs-12
        | #{__('This web site is open source ')}
        |&mdash;
        | #{__(' volunteers welcome ')}
        a(class="contrast-link" href="https://github.com/redcross/smoke-alarm-portal/" target="_blank") #{__(' at GitHub')}
        |.

    script(type="text/javascript").
      function setLocale(locale) { document.cookie= "locale=" + locale; location.reload(); }
      var locale = /locale=([^;]+)/.exec(document.cookie);

      if (locale && locale[1]) {
        $("select#language-switcher").val(locale[1]);
      }
      $("select#state").addClass('state-not-yet-selected');
      $("select#state").bind("focus", function () {
        $(this).children('option[value="state-not-yet-selected"]').remove();
        $(this).removeClass('state-not-yet-selected');
      });
      
      $(".form-horizontal").submit(function(e){
        e.preventDefault();
        var form = $(this)
        $.ajax({
          'url' : form.attr('action'),
          'type': form.attr('method'),
          'data': form.serialize(),
          'success': function(response){
            if (response.status == true) {
              $('#error-message').addClass('alert alert-danger').html(response.message);
            } else {
              $('form').attr('action');
              $('form').unbind('submit').submit();
            }
          },
          'error': function(jqXHR, error, errorThrown) {
            if (jqXHR) {
              $('#error-message').addClass('alert alert-danger').html("Oops. Something went wrong. Please try again.");
            }
          }
        });
      });
      
      $(".form-horizontal").validationEngine({
        'scroll': false,
        'autoPositionUpdate': true,
        'maxErrorsPerField': 1,
        'promptPosition': 'bottomRight',
        'custom_error_messages': {
          '#name': {
            'required': {
              'message': "* " + "#{__('This field is required')}"
            }
          },
          '#street_address': {
            'required': {
              'message': "* " + "#{__('This field is required')}"
            }
          },
          '#city': {
            'required': {
              'message': "* " + "#{__('This field is required')}"
            }
          },
          '#state': {
            'required': {
              'message': "* " + "#{__('This field is required')}"
            }
          },
          '#phone': {
            'groupRequired': {
              'message': "* " + "#{__('Please provide either a 10-digit phone number or an email address')}"
            },
            'custom[phone-10-digit-US]': {
              'message': "* " + "#{__('The phone number is invalid')}"
            }
          },
          '#zip': {
            'required': {
              'message': "* " + "#{__('A valid US zip code is required')}"
            },
            'custom[zip]': {
              'message': "* " + "#{__('A valid US zip code is required')}"
            }
          },
          '#email': {
            'groupRequired': {
              'message': "* " + "#{__('Please provide either a phone number or an email address')}"
            },
            'custom[email]': {
              'message': "* " + "#{__('The email address is invalid')}"
            }
          }
        }
      });
      // Fix Safari font-weight. The bizzare if-clause is feature-detection for Safari.
      if (Object.prototype.toString.call(window.HTMLElement).indexOf('Constructor') > 0) { $("body").css("font-weight", "400"); }



